{"ast":null,"code":"import { DomSanitizer } from '@angular/platform-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport let SafePipe = /*#__PURE__*/(() => {\n  class SafePipe {\n    /**\n      * Pipe Constructor\n      *\n      * @param _sanitizer: DomSanitezer\n      */\n    // tslint:disable-next-line\n    constructor(_sanitizer) {\n      this._sanitizer = _sanitizer;\n    }\n    /**\n     * Transform\n     *\n     * @param value: string\n     * @param type: string\n     */\n\n\n    transform(value, type) {\n      switch (type) {\n        case 'html':\n          return this._sanitizer.bypassSecurityTrustHtml(value);\n\n        case 'style':\n          return this._sanitizer.bypassSecurityTrustStyle(value);\n\n        case 'script':\n          return this._sanitizer.bypassSecurityTrustScript(value);\n\n        case 'url':\n          return this._sanitizer.bypassSecurityTrustUrl(value);\n\n        case 'resourceUrl':\n          return this._sanitizer.bypassSecurityTrustResourceUrl(value);\n\n        default:\n          return this._sanitizer.bypassSecurityTrustHtml(value);\n      }\n    }\n\n  }\n\n  SafePipe.ɵfac = function SafePipe_Factory(t) {\n    return new (t || SafePipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n  };\n\n  SafePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"safe\",\n    type: SafePipe,\n    pure: true\n  });\n  return SafePipe;\n})();","map":null,"metadata":{},"sourceType":"module"}